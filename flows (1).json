[{"id":"52351d39fbc1b12b","type":"function","z":"a8b0649fa4119045","name":"Contador","func":"// Inicializa os contadores no contexto global, caso ainda não existam\nif (context.get('acertos') === undefined) context.set('acertos', 0);\nif (context.get('erros') === undefined) context.set('erros', 0);\n\n// Atualiza os contadores com base no conteúdo do payload\nlet acertos = context.get('acertos');\nlet erros = context.get('erros');\n\nif (msg.payload === \"Correto!\") {\n    acertos += 1;\n    context.set('acertos', acertos);\n} else if (msg.payload === \"Errado!\") {\n    erros += 1;\n    context.set('erros', erros);\n} else {\n    // Mensagem inesperada\n    node.warn(`Mensagem inesperada: ${msg.payload}`);\n    return null;\n}\n\n// Prepara os dados para exibição no gráfico\nmsg.payload = {\n    series: [\"Respostas\"],\n    data: [[acertos, erros]],\n    labels: [\"Acertos\", \"Erros\"]\n};\n\n// Alternativamente, para exibir como texto:\nmsg.acertos = acertos;\nmsg.erros = erros;\n\n// Retorna a mensagem para o próximo nó\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":240,"wires":[["ef62adef54f198c9"]]}]